generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  email       String       @unique
  password    String?
  name        String?
  bio         String?
  avatar      String?
  created     DateTime     @default(now())
  theme       String?      @default("light")
  credentials Credential[]
  calendars   Calendar[]
  session     Session?

  @@map("users")
}

model Session {
  id      String   @id
  user    User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  Int?     @unique
  expDate DateTime

  @@map("sessions")
}

model Credential {
  id                Int        @id @default(autoincrement())
  account           String?
  type              String
  key               Json
  user              User?      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId            Int?
  selectedCalendars Calendar[]

  @@unique([userId, account])
  @@map("credentials")
}

model Calendar {
  id              Int         @id @default(autoincrement())
  user            User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          Int
  integration     String
  externalId      String
  credential      Credential? @relation(fields: [credentialId], references: [id], onDelete: Cascade)
  credentialId    Int?
  watchExpiration DateTime?
  watchId         String?

  @@unique([userId, integration, externalId])
  @@map("calendars")
}
